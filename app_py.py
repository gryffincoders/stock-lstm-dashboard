# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z3vaB2P0wtgNXP-30Lbz5naamEdWymdp
"""

import streamlit as st
import tensorflow as tf
import numpy as np
import warnings
import matplotlib.pyplot as plt


warnings.filterwarnings("ignore", category=UserWarning, module='keras')


api_key = st.secrets["api_key"]


def create_and_train_model(x_train, y_train):
    model = tf.keras.Sequential([
        tf.keras.layers.LSTM(64, activation='relu', input_shape=(None, 1)),
        tf.keras.layers.Dense(1)
    ])
    model.compile(optimizer='adam', loss='mean_squared_error')
    
    with st.spinner('Training the model...'):
        model.fit(x_train, y_train, epochs=5, batch_size=32)
    
    st.success("Model trained successfully!")
    return model


st.title("Stock Prediction with LSTM")
symbol = st.text_input("Enter Stock Symbol", "AAPL")

if symbol:
    st.write(f"Fetching data for {symbol}...")
    
    # Placeholder for actual data fetching logic
    x_train = np.random.rand(100, 1)
    y_train = np.random.rand(100, 1)
    
    # Train the model
    model = create_and_train_model(x_train, y_train)
    
    # Display model summary
    st.write("Model Summary:")
    st.text(model.summary())  # Using `st.text()` will display it as plain text
    
    # Example of generating a plot (replace with actual plot logic)
    plt.plot(np.arange(100), y_train)
    st.pyplot(plt)  # Display the plot
